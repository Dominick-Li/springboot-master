server:
  port: 8030

database:
  #数据库连接地址
  ip: 127.0.0.1
  #数据库端口
  port: 3306
  username: root
  password: 123456
  #连接信息前缀
  url-prefix: jdbc:mysql://${database.ip}:${database.port}
  #连接信息后缀
  url-suffix: createDatabaseIfNotExist=true&useSSL=false&serverTimezone=GMT%2b8&characterEncoding=utf8&connectTimeout=1000&socketTimeout=15000&autoReconnect=true
  #配置数据库名称集合
  datasource:
    db1: test1
    db2: test2

spring:
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
  shardingsphere:
    datasource:
      # 数据源名称集合
      names: ${database.datasource.db1}, ${database.datasource.db2}
      test1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: ${database.url-prefix}/${database.datasource.db1}?${database.url-suffix}
        username: ${database.username}
        password: ${database.password}
      test2:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: ${database.url-prefix}/${database.datasource.db2}?${database.url-suffix}
        username: ${database.username}
        password: ${database.password}
    sharding:
      # 默认分库 未配置分片规则的表将通过默认数据源定位
      default-data-source-name: ${database.datasource.db1}
      # 分表
      tables:
        #表名
        user:
          #数据库名称$->{数量范围}.表名称
          actual-data-nodes: test$->{1..2}.user
          #分库策略
          database-strategy:
            # 行表达式模式
            inline:
              #配置库分片的字段
              sharding-column: id
              # 表达式，分库的算法，这个是通过id取模然后决定落到哪个库
              algorithm-expression: test$->{id % 2 + 1}
          key-generator:
            column: id
            # 雪花算法生成id
            type: SNOWFLAKE
    #打印sharding的日志
    props:
      sql:
        show: true
